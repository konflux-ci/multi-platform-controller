name: Validate PR - golang CI
on:
  pull_request:
    branches: [main]
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Install Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version-file: "./go.mod"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804 # v4
        with:
          args: "--timeout=10m --build-tags='normal periodic'"
  go:
    name: Check sources
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Install Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version-file: "./go.mod"
      - name: Check go mod status
        run: |
          go mod tidy
          if [[ ! -z $(git status -s) ]]
          then
            echo "Go mod state is not clean:"
            git --no-pager diff
            exit 1
          fi
      - name: Check format
        run: |
          make fmt
          if [[ ! -z $(git status -s) ]]
          then
            echo "not all golang files properly gofmt'ed:"
            git --no-pager diff
            exit 1
          fi
  unit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Trigger mpc-test-ci workflow
        uses: multi-platform-controller/workflow-dispatch@1
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          workflow: mpc-test-ci.yaml
          ref: ${{github.sha}}
          inputs: |
            target-branch: ${{github.event.pull_request.head.ref}}
        env: 
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
  security_scan:
    name: Security scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version-file: "./go.mod"
      # https://github.com/securego/gosec/blob/12be14859bc7d4b956b71bef0b443694aa519d8a/README.md#integrating-with-code-scanning
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: "-tags normal,periodic -no-fail -fmt sarif -out results.sarif ./..."
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@1b1aada464948af03b950897e5eb522f92603cc2 # v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
