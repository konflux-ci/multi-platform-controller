name: Validate PR - Testing Phase - golang CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches: [ main ]
  
  push:
    branches: [ main ]

  repository_dispatch:
    types: [trigger-mpc-test]

concurrency:
  group: ${{ github.workflow }}-${{ (github.event_name == 'pull_request' && github.event.pull_request.number) || github.ref }}
  cancel-in-progress: true

jobs:
  checkout_and_test:
    name: Golang Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Determine workflow run event context
        run: echo "on-event=${{ github.event_name }}" >> $GITHUB_ENV
      - name: Handle invalid context for pull requests
        if: ${{ env.on-event == 'pull_request' && (!github.event.pull_request.head.sha || !github.event.pull_request.number) }}
        run: |
          echo "Invalid context for this workflow run. Exiting."
          exit 1
      - name: Check out pull request head code - on pull_request event
        if: env.on-event == 'pull_request'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}  
          ref: ${{ github.event.pull_request.head.ref }}  
      - name: Check out main code - on push event
        if: env.on-event == 'push'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v5
        with:
          go-version-file: "./go.mod"
      - name: Build
        run: make build
      - name: Test
        run: make test
